dc2ca340a52750c1fe2ebde12d7d2da4
"use strict";var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");Object.defineProperty(exports, "__esModule", { value: true });exports.default = exports.matchPath = void 0;var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));var _toArray2 = _interopRequireDefault(require("@babel/runtime/helpers/toArray"));var _slicedToArray2 = _interopRequireDefault(require("@babel/runtime/helpers/slicedToArray"));var _pathToRegexp = _interopRequireDefault(require("path-to-regexp"));































var compilePathToRegex = function compilePathToRegex(path) {
  var keys = [];
  var re = (0, _pathToRegexp.default)(path, keys);


  return { re: re, keys: keys };
};



























var matchPath = function matchPath(path, url) {var _url$split =


  url.split('?'),_url$split2 = (0, _slicedToArray2.default)(_url$split, 1),urlCleaned = _url$split2[0];


  var urlToMatch = !urlCleaned.endsWith('/') ? urlCleaned + "/" : urlCleaned;var _compilePathToRegex =


  compilePathToRegex(path),re = _compilePathToRegex.re,keys = _compilePathToRegex.keys;


  var match = re.exec(urlToMatch);


  if (!match) {
    return null;
  }var _match = (0, _toArray2.default)(



  match),compiledUrl = _match[0],values = _match.slice(1);



  if (urlToMatch !== compiledUrl) {
    return null;
  }

  var params = keys.reduce(function (acc, key, index) {return (0, _extends2.default)({}, acc, (0, _defineProperty2.default)({}, key.name, values[index]));}, {});

  return { path: path, params: params };
};exports.matchPath = matchPath;











var pathParser = function pathParser(url) {var possibleMatchingpaths = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];return possibleMatchingpaths.map(function (path) {return matchPath(path, url);}).find(function (obj) {return obj;});};var _default =

pathParser;exports.default = _default;