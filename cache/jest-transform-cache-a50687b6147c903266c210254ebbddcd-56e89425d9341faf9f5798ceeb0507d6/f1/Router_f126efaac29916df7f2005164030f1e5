6ebde598bfb927a016fe176b372ddc3c
"use strict";var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");Object.defineProperty(exports, "__esModule", { value: true });exports.default = void 0;var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));var _objectSpread2 = _interopRequireDefault(require("@babel/runtime/helpers/objectSpread"));var _objectWithoutProperties2 = _interopRequireDefault(require("@babel/runtime/helpers/objectWithoutProperties"));var _slicedToArray2 = _interopRequireDefault(require("@babel/runtime/helpers/slicedToArray"));var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));var _getPrototypeOf2 = _interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));var _react = _interopRequireDefault(require("react"));
var _reactNative = require("react-native");
var _propTypes = _interopRequireDefault(require("prop-types"));
var _navigationStore = _interopRequireDefault(require("./navigationStore"));
var _pathParser = _interopRequireDefault(require("./pathParser"));var _jsxFileName = "/Users/mac-185-71/Projects/sbmt_timetable/node_modules/react-native-router-flux/src/Router.js";var

App = function (_React$Component) {(0, _inherits2.default)(App, _React$Component);function App() {var _getPrototypeOf2;var _this;(0, _classCallCheck2.default)(this, App);for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {args[_key] = arguments[_key];}_this = (0, _possibleConstructorReturn2.default)(this, (_getPrototypeOf2 = (0, _getPrototypeOf2.default)(App)).call.apply(_getPrototypeOf2, [this].concat(args)));_this.




























    onBackPress = function () {return _navigationStore.default.pop();};_this.

    handleDeepURL = function (e) {return _this.parseDeepURL(e.url);};_this.

    parseDeepURL = function (url) {

      if (!url) {
        return;
      }


      var cleanUrl = _this.props.uriPrefix ? url.split(_this.props.uriPrefix)[1] : url;

      if (!cleanUrl) {
        return;
      }

      var allPaths = Object.values(_navigationStore.default.states).
      map(function (obj) {return obj.path;}).
      filter(function (path) {return path;});

      var parsedPath = (0, _pathParser.default)(cleanUrl, allPaths);


      if (!parsedPath) {
        return;
      }var


      path = parsedPath.path,params = parsedPath.params;


      var actionKey = Object.entries(_navigationStore.default.states).
      filter(function (_ref) {var _ref2 = (0, _slicedToArray2.default)(_ref, 2),value = _ref2[1];return value.path === path;}).
      map(function (_ref3) {var _ref4 = (0, _slicedToArray2.default)(_ref3, 1),key = _ref4[0];return key;}).
      find(function (key) {return key;});

      if (_this.props.onDeepLink) {
        _this.props.onDeepLink({ url: url, action: actionKey, params: params });
      } else if (actionKey && _navigationStore.default[actionKey]) {

        _navigationStore.default[actionKey](params);
      }
    };return _this;}(0, _createClass2.default)(App, [{ key: "componentDidMount", value: function componentDidMount() {var _this2 = this;_reactNative.BackHandler.addEventListener('hardwareBackPress', this.props.backAndroidHandler || this.onBackPress);_reactNative.Linking.getInitialURL().then(function (url) {return _this2.parseDeepURL(url);});_reactNative.Linking.addEventListener('url', this.handleDeepURL);} }, { key: "componentWillUnmount", value: function componentWillUnmount() {_reactNative.BackHandler.removeEventListener('hardwareBackPress', this.props.backAndroidHandler || this.onBackPress);_reactNative.Linking.removeEventListener('url', this.handleDeepURL);} }, { key: "render", value: function render()

    {var _this$props =
      this.props,dispatch = _this$props.dispatch,state = _this$props.state,AppNavigator = _this$props.navigator;
      if (dispatch && state) {
        _navigationStore.default.externalDispatch = dispatch;
        _navigationStore.default.externalState = state;
        return (
          _react.default.createElement(AppNavigator, {
            dispatch: _navigationStore.default.dispatch,
            state: _navigationStore.default.state,
            ref: function ref(navigatorRef) {
              _navigationStore.default.setTopLevelNavigator(navigatorRef);
            }, __source: { fileName: _jsxFileName, lineNumber: 87 } }));


      }
      return (
        _react.default.createElement(AppNavigator, {
          onNavigationStateChange: _navigationStore.default.onNavigationStateChange,
          ref: function ref(navigatorRef) {
            _navigationStore.default.setTopLevelNavigator(navigatorRef);
          }, __source: { fileName: _jsxFileName, lineNumber: 97 } }));


    } }]);return App;}(_react.default.Component);App.propTypes = { navigator: _propTypes.default.func, backAndroidHandler: _propTypes.default.func, uriPrefix: _propTypes.default.string, onDeepLink: _propTypes.default.func };App.defaultProps = { navigator: null, backAndroidHandler: null, uriPrefix: null, onDeepLink: null };


var Router = function Router(_ref5)

{var createReducer = _ref5.createReducer,sceneStyle = _ref5.sceneStyle,onStateChange = _ref5.onStateChange,scenes = _ref5.scenes,uriPrefix = _ref5.uriPrefix,navigator = _ref5.navigator,getSceneStyle = _ref5.getSceneStyle,children = _ref5.children,onDeepLink = _ref5.onDeepLink,wrapBy = _ref5.wrapBy,props = (0, _objectWithoutProperties2.default)(_ref5, ["createReducer", "sceneStyle", "onStateChange", "scenes", "uriPrefix", "navigator", "getSceneStyle", "children", "onDeepLink", "wrapBy"]);
  var data = (0, _objectSpread2.default)({}, props);
  if (getSceneStyle) {
    data.cardStyle = getSceneStyle(props);
  }
  if (sceneStyle) {
    data.cardStyle = sceneStyle;
  }
  var AppNavigator = scenes || navigator || _navigationStore.default.create(children, data, wrapBy);
  _navigationStore.default.reducer = createReducer && createReducer(props);
  if (onStateChange) {
    _navigationStore.default.onStateChange = onStateChange;
  }
  return _react.default.createElement(App, (0, _extends2.default)({}, props, { onDeepLink: onDeepLink, navigator: AppNavigator, uriPrefix: uriPrefix, __source: { fileName: _jsxFileName, lineNumber: 122 } }));
};
Router.propTypes = {
  onStateChange: _propTypes.default.func,
  scenes: _propTypes.default.func,
  navigator: _propTypes.default.func,
  wrapBy: _propTypes.default.func,
  getSceneStyle: _propTypes.default.func,
  sceneStyle: _reactNative.ViewPropTypes.style,
  createReducer: _propTypes.default.func,
  children: _propTypes.default.element,
  uriPrefix: _propTypes.default.string,
  onDeepLink: _propTypes.default.func };

Router.defaultProps = {
  onStateChange: null,
  scenes: null,
  navigator: null,
  wrapBy: function wrapBy(props) {return props;},
  getSceneStyle: null,
  sceneStyle: null,
  children: null,
  uriPrefix: null,
  onDeepLink: null };var _default =


Router;exports.default = _default;